day-1


const myMessage = 'Hello world'
console.log(myMessage)
// String a="nandhini"
=============================


 const myMessage = 'Hello world'
console.log("my data is: ",myMessage)
// my data is: 
================================
 const myName = 'sai'
 const myRoll=12
console.log("my name is: ",myName,"my roll is: ",myRoll)
console.log(my name is: ${myName} and my roll is ${myRoll})
// my data is: sai my roll is: 12 
=============================================
let 	reassign  redeclare function scope
var   	reassign  no	    block scope
const	no        no   	    block scope
=================================
 const myName = 'sai'
 myName='ram'
console.log(`my name is: ${myName} `)
// my data is: sai my roll is: 12  // err

======================================
 var myName = 'sai'
 myName='ram'
  
console.log(`my name is: ${myName} `)
// my data is: sai my roll is: 12 
=============================================
 let myName = 'sai'
 myName='ram'
  
console.log(`my name is: ${myName} `)
// my data is: sai my roll is: 12 
====================================
var myName = 'sai'
function disp(){
  myName = 'ram'
  console.log('im inside the fun: ',myName)
if(true){
     myName = 'nandhini'
console.log('im inside the block: ',myName)
}
}
disp()
console.log('im inside the fun: ',myName)
============================
const myName='outside'
function disp(){
  const myName = 'inside func'
  console.log('im inside the fun: ',myName)
if(true){
     const myName = 'inside the block'
console.log('im inside the block: ',myName)
}
}
disp()
console.log('im outside the function: ',myName)

======================================
var myName='1'
function disp(){

if(false){
     var myName = '2'
}
console.log('im inside the block: ',myName)
}
disp()
console.log('im outside the function: ',myName)

=========================
let myName='1'
function disp(){
if(true){
     let myName = '2'
}
console.log('im inside the block: ',myName)
}
disp()
console.log('im outside the function: ',myName)

==============================
 //var b=10
function disp() {
  //let a=10
    b=10
  }
disp()
//console.log(a);
 console.log(b);

 
============================
  const person={
    roll:23,
    stuName:"sai"
  }
  person.stuName="ram"
  console.log(person.stuName);
const per=[12,'nan',90,89]
  const a=[23,1,4,6]
  /*
 {
  0:23
  1:1
  2:4
  3:6
  }
  */
  a[0]=45
 console.log(a);

  ==========================   a='sai'
   b="ram"
  c=`hai erwer
  weerewrewrewrw werwerwerwe werwerewrewr `
 console.log(a);
 console.log(b);
 console.log(c);

  
 
===============================
console.log("Hello, World!");a = 12;
b = 32432423442343242342342222222222n;
c = Infinity;
 d = 10 / 0;
 e = 5 < Infinity;
 d = 'hai' * 3;
f=NaN
console.log(a);
console.log(b);
console.log(c);
console.log(d);
console.log(e);
 console.log(d);
  console.log(f);
=========================================
let a= false
let b= true
console.log(a)
console.log(b)
console.log (typeof (a))


let a= false
let b= true
console.log(a)
console.log(b)
console.log (typeof (a))
===========================
let a= null
console.log(a)
console.log (typeof (a))
=======================================
let a
console.log(a,typeof(a))
var a= 1
var b= '1'
console.log(a!==b)
========================
var a= 1
var b= '1'
console.log(a===b)
===========================
var a= 2
var b= 4
console.log(a**b)
===========================
let a=[12,4,"sai",23.4]
let datas=[100,200,300]
let person={name:'reena', roll:5}
console.log(a)
a.push(datas,800,person)
console.log(a)

console.log(a[4])
a[4].push(400)
console.log(a)
============================
let a=[12,4,"sai",23.4]
let datas=[100,200,300]
let person={name:'reena', roll:5}
console.log(a)
a.unshift(datas,800,person)
a.unshift(800)
console.log(a)
console.log(a[0])

=========================================
let a=[12,4,"sai",23.4]
let datas=[100,200,300]
let person={name:'reena', roll:5}
a.push(datas,800,person)
//res=a.pop()
res=a[4].pop()
 
console.log("result" ,res)
console.log(a)

===========================================
let a=[12,4,"sai",23.4]
 
res=a.shift()
 
console.log("result" ,res)
console.log(a)

===============================
let a=[12,4,"sai",23.4]
console.log("b4 del",a.length)
res=delete a[1]
console.log(a)

console.log("after del",a.length)

for(let i=0;i<a.length;i++)
console.log(a[i])

==========================
let a=[12,4,1]
var s=0
 

for(let i=0;i<a.length;i++)
s=s+a[i]
console.log(s)
let a=[10,20,30,40,50]
let b=[100,200,300]
console.log('len: ',a.length)
 
a.splice(1,2,b)//index, how many ele u dnt want
console.log('len : ',a.length)
console.log('datas : ',a)
let a=[10,20,30,40,50]
let b=[100,200,300]
console.log('len: ',a.length)
 
a.splice(1,2,b)//index, how many ele u dnt want
console.log('len : ',a.length)
console.log('datas : ',a)
let person={
  roll:12,
  name:"sai"
}
console.log(person)
console.log("dot notation: ",person.name ," ",person.roll)
console.log("sqr brkt notation: ",person["name"] ," ",person["roll"])
============================================
let person={
  roll:12,
  name:"sai"
}
person.name="ram"
person['roll']=1
console.log(person)
================================
let person={
  roll:12,
  name:"sai"
}
person.city="CBE"
person['state']='TN'
person.name="ram"
person['roll']=1
console.log(person)
let person={
  roll:12,
  name:"sai"
}
person.city="CBE"
person['state']='TN'
person.name="ram"
person['roll']=1
console.log(person)
//delete person.roll
delete person['roll']
console.log('after del',person)
let person=[{
  roll:12,
  name:"sai"
},{
  roll:13,
  name:"ram"
}

]
 
console.log(person)
for(let a of person)
console.log(a.roll," "+a['name'])
//console.log(a)
let person=[{
  roll:12,
  name:"sai"
},{
  roll:13,
  name:"ram"
}

]
 
console.log(person)
for(let a of person)
console.log(a.roll," "+a['name'])
//console.log(a)


 day-2


let person=[{
  roll:12,
  name:"sai"
},{
  roll:13,
  name:"ram"
}

]
 
console.log(person)
for(let a of person)
console.log(a.roll," "+a['name'])
//console.log(a)
<!doctype html>
<html lang="en">
	<head>
	<title>sample</title>
	<meta charset="utf-8">	
	</head>
<body>
<form action="processreg.html" method="get" id="frmstureg" name="frmstureg" onsubmit="return validate()" onreset="return resetForm()">
<label for="txtstuname">Student Name:</label><br>
<input type="text" id="txtstuname" value="" placeholder="Enter ur name"   name="namedata"  />
<span id="spanisstunamevalid"></span><br><br>	

<label for="txtstupass">Password:</label><br>
<input type="password" id="txtstupass" value="" placeholder="Enter ur password"   name="passworddata"  />
<span id="spanispassvalid"></span><br><br>


<label for="txtconfirmstupass">Confrim Password:</label><br>
<input type="password" id="txtconfirmstupass" value="" placeholder="re-enter  password"   name="cpassworddata"  />
<span id="spaniscpassvalid"></span><br><br>


<label  >Gender:</label><br>
<input type="radio" id="rmale" value="male"   name="valradio"  />
<label>Male</label> 
<input type="radio" id="rfemale" value="female"   name="valradio"  />
<label>Female</label> 
<span id="spangender"></span><br><br>


<label >Qualification:</label><br>
<select type="select" id="stuqualification"    name="qualification" >
	<option value="-1">--select--</option>
	<option value="b.tech">B.Tech</option>
	<option value="be(cse)">BE(CSE)</option>
	<option value="mech">Mech</option>
</select>
<span id="spanqualification"></span><br><br>
<br>
 




<input type="submit" value="SUBMIT"/>
<input type="reset" value="RESET"/>				
</form>	
<script type="text/javascript">
function validate()
{
	 isnamevalid=true; 
	 ispassvalid=true;	
	iscpassvalid=true;
	isgendervalid=true;
	isqualification=true;
	if(document.getElementById("txtstuname").value=="")
	{
		isnamevalid=false;
	 document.getElementById("spanisstunamevalid").innerHTML="plz enter the name";
	document.getElementById("spanisstunamevalid").style.color="red"; 
	}
	else
	{
	isnamevalid=true;
	 document.getElementById("spanisstunamevalid").innerHTML="valid";
	document.getElementById("spanisstunamevalid").style.color="green"; 
	}

	if(document.getElementById("txtstupass").value=="")
	{
		ispassvalid=false;
	 document.getElementById("spanispassvalid").innerHTML="plz enter ur password";
	document.getElementById("spanispassvalid").style.color="red"; 
	}
	else
	{
	ispassvalid=true;
	 document.getElementById("spanispassvalid").innerHTML="valid";
	document.getElementById("spanispassvalid").style.color="green"; 
	}


	if(document.getElementById("txtconfirmstupass").value=="")
	{
		iscpassvalid=false;
	 document.getElementById("spaniscpassvalid").innerHTML="plz re-enter ur password";
	document.getElementById("spaniscpassvalid").style.color="red"; 
	}
else if(document.getElementById("txtconfirmstupass").value!=document.getElementById("txtstupass").value)
	{
		iscpassvalid=false;
	 document.getElementById("spaniscpassvalid").innerHTML="password and confirm password not same";
	document.getElementById("spaniscpassvalid").style.color="red"; 
	}
	else
	{
	iscpassvalid=true;
	 document.getElementById("spaniscpassvalid").innerHTML="valid";
	document.getElementById("spaniscpassvalid").style.color="green"; 
	}


if(document.getElementById("rmale").checked!=true && document.getElementById("rfemale").checked!=true)
	{
		isgendervalid=false;
	 document.getElementById("spangender").innerHTML="plz choose the gender";
	document.getElementById("spangender").style.color="red"; 
	}
	else
	{
	isgendervalid=true;
	 document.getElementById("spangender").innerHTML="valid";
	document.getElementById("spangender").style.color="green"; 
	}

if(document.getElementById("stuqualification").value=="-1")
	{
		isqualification=false;
	 document.getElementById("spanqualification").innerHTML="plz choose the qualification";
	document.getElementById("spanqualification").style.color="red"; 
	}
	else
	{
	isqualification=true;
	 document.getElementById("spanqualification").innerHTML="valid";
	document.getElementById("spanqualification").style.color="green"; 
	}


	
	if( isnamevalid==false || ispassvalid==false || iscpassvalid==false||isgendervalid==false||isqualification==false)
	{
		return false;
	}
	else{
		return true;
	}

 
 

}

function resetForm()
{
 document.getElementById("spanisstunamevalid").innerHTML="";
document.getElementById("spanispassvalid").innerHTML="";
document.getElementById("spaniscpassvalid").innerHTML="";	 
document.getElementById("rmale").checked=false;	 
document.getElementById("rfemale").checked=false;
document.getElementById("spangender").innerHTML="";
document.getElementById("spanqualification").innerHTML="";
}

</script>
</body>

</html>
 


day-3

import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
import Display from './Display'
import Datas from './Datas'
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
  <Datas/>
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();
===================================
import Display from "./Display"

function Datas()
{
    let name='sai'
    const ans=my name is ${name}
    return(
        <>
        <h1>my name is  {name}</h1>
        <h1>  {ans} </h1>
       <Display />
        </>
    )
}
export default Datas
======================================
function Display( )
{
  
    return (
        <>
        <h1>im coming from Datas.js  </h1>
        <h3>this is from display</h3>
        <h4>im the sec line</h4>
        </>
    )
}
export default Display
=======================================
props


import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
import Display from './Display'
import Datas from './Datas'
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
  <Datas/>
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();
================================
import Display from "./Display"

function Datas()
{
    let name='sai'
    const ans=my name is ${name}
    return(
        <>
        <h1>my name is  {name}</h1>
        <h1>  {ans} </h1>
       <Display n={name} />
        </>
    )
}
export default Datas
=======================================
function Display(values)
{
  
    const {n}=values
    return (
        <>
        <h1>im coming from Datas.js {n} </h1>
        <h3>this is from display</h3>
        <h4>im the sec line</h4>
        </>
    )
}
export default Display
import Display from "./Display"

function Datas()
{
    const person={
        empName:'dena',
        city:'cbe'

    }
    let name='sai'
    let roll=12
    const ans=my name is ${name}
    return(
        <>
        <h1>my name is  {name}</h1>
        <h1>  {ans} </h1>
       <Display n={name} roll={roll} gender='male' obj={person}/>
        </>
    )
}
export default Datas
function Display(values) 
{
  
    const {n, roll,gender, obj}=values
    const {empName,city}=obj
    return (
        <>
        <h1>im coming from Datas.js {n} {roll} {gender} </h1>
        <h2>{empName}, {city}</h2>
        <h3>this is from display</h3>
        <h4>im the sec line</h4>
        </>
    )
}
export default Display
import React from "react"
class MyClass extends React.Component{
    render(){

        return (
            <>
            <h1> im from the class</h1>
            <h1> im from the class hai welcome</h1>
            </>
        )
    }
}

export default MyClass
export default  function Test ()
{
  
    
    
    return (
        <>
        <h1>im  from the test</h1>
         
        <h4>im the sec line</h4>
        </>
    )
}
[08-01-2025 14:13] +91 95855 24527: export default function States(){
    var clr='blue'
    console.log("b4  : ",clr)
     function change()
     {
        clr='red'

        console.log('after.......',clr)
        
     }
     
  
    return(
        <>
        <h1>i love {clr} color</h1>
        <button onClick={change}>click here!! </button>
        </>
    )
}
====================================
export default function States(){
    var clr='blue'
    console.log("b4  : ",clr)
      
    return(
        <>
        <h1>i love {clr} color</h1>
        <button onClick={()=>{
             clr='red'
             console.log('after.......',clr)
        }}>click here!! </button>
        </>
    )
}
[08-01-2025 14:25] +91 95855 24527: import { useState } from "react"

export default function States(){
    //var clr='blue'
    var [clr,setClr]= useState('blue')
    console.log("b4  : ",clr)
      
    return(
        <>
        <h1>i love {clr} color</h1>
        <button onClick={()=>{setClr(clr='red')} }>click here!! </button>
        </>
    )
}
[08-01-2025 14:37] +91 95855 24527: import { useState } from "react"

export default function States(){
    
    var [clr,setClr]= useState('blue')
    var [name,setName]= useState('sai')
     
    return(
        <>
        <h1> my name is {name} <br></br>i love {clr} color</h1>
        <button onClick={()=>{ setClr('red') ; setName('demo')}
            }>click here!! </button>
        </>
    )
}
[08-01-2025 14:40] +91 95855 24527: import { useState } from "react"

export default function States(){
    
    // var [clr,setClr]= useState('blue')
    // var [name,setName]= useState('sai')
     var [data,setData]=useState(
        {
            clr:'pink',
            name:'sai'
        }
     )
     
    return(
        <>
        <h1> my name is {data.name}<br></br> i love {data.clr} color</h1>
        <button onClick={()=>{ setData(
            {
                
                    clr:'green',
                    name:'ram'
                 
            }
        )}
            }>click here!! </button>
        </>
    )
}
[08-01-2025 15:15] +91 95855 24527: import { useState } from "react"

export default function States(){
    const updateClr=()=>{
        setData( {...data,
               clr:'gray'
        })
    }
     
    const updateName=()=>{
        setData( {...data,
               name:'arun'
        })
    }
     

     var [data,setData]=useState(
        {
            clr:'pink',
            name:'sai'
        }
     )

     
    return(
        <>
        <h1> my name is {data.name}<br></br> i love {data.clr} color</h1>
        <button onClick={()=>{ setData(
            {
                
                    clr:'green',
                    name:'ram'
                 
            }
        )}
            }>click here!! </button> <br/><br/>

<button onClick={()=>{ updateClr() }
            }>update the clr!! </button> <br/><br/>


<button onClick={()=>{ updateName() }
            }>update the name!! </button>
        </>
    )
}
[08-01-2025 15:32] +91 95855 24527: a =[1,2,30]
let s=0
// for (let i=0;i<a.length;i++)
// {
//   s=s+a[i]
// }
// console.log(s)

//a.map((d)=>{s=s+d} )
a.map((d)=>{console.log(d)})

============================================================================================================================================================================================



day-3




[09-01-2025 09:28] +91 95855 24527: import { useEffect, useState } from "react"
export default function Demo(){
    const[count1,setCount1]=useState(0)
    const[count2,setCount2]=useState(0)
    useEffect(()=>{
        console.log('rendering......')
    })
    return(
        <>
        <h1>the state val is {count1}</h1>
        <h1>the state val is {count2}</h1>
        <button onClick={()=>{setCount1(count1+1)}}>count1</button>

      
        <button onClick={()=>{setCount2(count2+1)}}>count2</button>
        </>


    )
}
[09-01-2025 10:26] +91 95855 24527: import {   useReducer } from "react"
export default function Demo(){
    const transcationReducer=(balance,action)=>{
            switch(action.type)
            {
                case 'WITHDRAW': 
                    return balance - action.payload
                case 'DEPOSIT': 
                    return balance + action.payload
                     
            }



    }

    const withdraw=(amount)=>{
        dispatch({type:'WITHDRAW',payload:amount})
    }
    const deposit=(amount)=>{
        dispatch({type:'DEPOSIT',payload:amount})
    }
     const[balance,dispatch]= useReducer(transcationReducer,1000)
    return(
        <>
        <h1>the balance val is {balance}</h1>
         
        <button onClick={()=>{withdraw(500)}}>Withdraw</button>
        <button onClick={()=>{deposit(1000)}}>Deposit</button>

      
       
        </>


    )
}
[09-01-2025 11:55] +91 95855 24527: import { useState } from "react"
 

export default function Parent1(){
    const[user,setuser]=useState('sai')
    const a=()=>{
        setuser()
    }
    return(
         <>
         <h1>Parent</h1>
         <C1 user={user}/>
         </>
    )

}
 function C1(val){
    const{user}=val
    
    return(
         <>
         <h1>C1</h1>
         <C2 user={user}/>
         </>
    )

}
function C2(val){
    const{user}=val
    
    return(
         <>
         <h1>C2</h1>
         <C3 user={user}/>
         </>
    )

}

 function C3(val){
    const{user}=val
    
    return(
         <>
         <h1>C3</h1>
         <C4 user={user}/>
         </>
    )

}function C4(val){
    const{user}=val
    
    return(
         <>
         <h1>C4</h1>
         <C5 user={user}/>
         </>
    )

}
function C5(val){
    const{user}=val
    
    return(
         <>
         <h1>C5 the data is {user}</h1>
          
         </>
    )

}
[09-01-2025 12:10] +91 95855 24527: import { createContext, useContext, useState } from "react"

const userContext=createContext()
export default function Parent2(){
      const[user]=useState('sai')
return(
    <>
    <userContext.Provider value={user}>
    <h1>welcome useContext Hook</h1>
    <C1/>
    </userContext.Provider>
    </>
)}
function C1( ){
     return(
         <>
         <h1>C1</h1>
         <C2  />
         </>
    )}
function C2( ){
    return(
         <>
         <h1>C2</h1>
         <C3 />
         </>
    )
}
 function C3( ){
    return(
         <>
         <h1>C3</h1>
         <C4 />
         </>
    )

}function C4( ){
    return(
         <>
         <h1>C4</h1>
         <C5  />
         </>
    )

}
function C5( ){
    const user=useContext(userContext)
    return(
         <>
         <h1>C5 the data is {user}</h1>
          
         </>
    )

}


===========================================================================================================================================================================



day-4



[09-01-2025 12:40] +91 95855 24527: import { createContext, useContext, useState } from "react"

const userContext=createContext()
export default function Parent2(){
      const[user,setUser]=useState('Sairam')
return(
    <>
    <userContext.Provider value={{user,setUser}}>
    <h1>welcome useContext Hook</h1>
    <C1/>
    </userContext.Provider>
    </>
)}
function C1( ){
     return(
         <>
         <h1>C1</h1>
         <C2  />
         </>
    )}
function C2( ){
    return(
         <>
         <h1>C2</h1>
         <C3 />
         </>
    )
}
 function C3( ){
    return(
         <>
         <h1>C3</h1>
         <C4 />
         </>
    )

}function C4( ){
    return(
         <>
         <h1>C4</h1>
         <C5  />
         </>
    )

}
 
 

function C5() {
  const { user, setUser } = useContext(userContext);

//   const updateUser= () => {
//     setUser("ram");
//   };

  return (
    <>
      <h1>C5: The data is {user}</h1>
      <button onClick={()=>{
        setUser("ram")
      }}>Change User</button>
    </>
  );
}
[09-01-2025 14:17] +91 95855 24527: import { useState } from "react"
import C4 from "./C4"

export default function C3( ){
     const items = [1,232,4,34];

  return (
    <>
    <ul>
    {
      items.map((item,i)=> (<li key={i}>{item}</li>))
    }
      </ul>
    </>
  );

}
[09-01-2025 14:21] +91 95855 24527: import { useState } from "react"
import C4 from "./C4"

export default function C3( ){
     const items = [1,232,4,34];

  return (
    <>
    <ul>
    {
      items.map((item,i)=> (<li key={i}> <C4 n={item} /></li>))
    }
      </ul>
    </>
  );

}
[09-01-2025 14:22] +91 95855 24527: import C5 from "./C5"

export default function C4(val){
    const{n}=val
    
    return(
         <>
         <ol>
         <l1>{n}</l1>
         </ol>
          
         </>
    )

}
[09-01-2025 14:43] +91 95855 24527: import { useState } from "react";
import C2 from "./C2";

export default function C1() {
  const [user] = useState("parent");
  const [childData, setChildData] = useState(""); 

 
  const handleChildData = (data) => {
    setChildData(data);
  };

  return (
    <>
      <h1>This is C1.........</h1>
      <C2 user={user} sendDataToParent={handleChildData} />
      <h1>Data from my child: {childData}</h1>
    </>
  );
}
---------------------------------
import { useState } from "react";

export default function C2({ user, sendDataToParent }) {
  const [stu] = useState("I'm your student");
  const sendData = () => {
    sendDataToParent(stu);
  };

  return (
    <>
      <p>This is C2</p>
      <p>
        C2: The data coming from C1 is <b>{user}</b>
      </p>
      <button onClick={sendData}>Send Data to Parent</button>
    </>
  );
}
[09-01-2025 15:11] +91 95855 24527: const { useState } = require("react")
export default function Form1()
{
    function formSubmit(formdata)
    {    formdata.preventDefault()
        console.log('success............')
    }
    const[name,setName]=useState("")
    return(
        <>
        <form>
Name: <input type="text" onChange={(data)=>{setName(data.target.value)}}></input>
        <button onClick={formSubmit}>signup</button>
        </form>
        <h1>the name is: {name}</h1>
        </>
    )
}
[09-01-2025 15:15] +91 95855 24527: const { useState } = require("react")
export default function Form1()
{
    function formSubmit(formdata)
    {    
        formdata.preventDefault()
        console.log('success............')
    }
    const[name,setName]=useState("")
    return(
        <>
        <form onSubmit={formSubmit}>
Name: <input type="text" onChange={(data)=>{setName(data.target.value)}}></input>
        <input type="submit" value="signup"></input>
        </form>
        <h1>the name is: {name}</h1>
        </>
    )
}
[09-01-2025 15:28] +91 95855 24527: task : create a form along with (roll,name,gender,city,phone) thru objects

=======================================================================================================================================================



[10-01-2025 09:29] +91 95855 24527: const { useState } = require("react")
export default function Form1()
{
    function formSubmit(formdata)
    {    
        formdata.preventDefault()
        console.log('success............,',input.name,input.roll,input.city)
    }
    const [input,setInput]=useState(
        {
            roll:'',
            name:'',
            city:''
        }
    )
    return(
        <>
        <form onSubmit={formSubmit}
Name: <input type="text" onChange={(data)=>{setInput({...input,name:data.target.value})}}></input><br/>
Roll: <input type="text" onChange={(data)=>{setInput({...input,roll:data.target.value})}}></input><br/>
City: <input type="text" onChange={(data)=>{setInput({...input,city:data.target.value})}}></input><br/>
        <input type="submit" value="signup"></input>
        </form>
        
        </>
    )
}
[10-01-2025 10:11] +91 95855 24527: const { useState } = require("react")
export default function Form1()
{
    function formSubmit(formdata)
    {    
        formdata.preventDefault()
       
        console.log('success............,',input.name,input.roll,input.city)
    }
    function updateData(d)
    {
        var variable =d.target.name;
        var value = d.target.value;
        console.log("the vari: ",variable,"the val: ",value)
    }
    const [input,setInput]=useState(
        {
            roll:'',
            name:'',
            city:''
        }
    )
    return(
        <>
        <form onSubmit={formSubmit}>
        Name: <input type="text" name='txtName' onChange={updateData}></input><br/>
Roll: <input type="text" name='txtRoll'  onChange={updateData}></input><br/>
City: <input type="text" name='txtCity'   onChange={updateData}></input><br/>
{/* Name: <input type="text" name='txtName' onChange={(data)=>{setInput({...input,name:data.target.value})}}></input><br/>
Roll: <input type="text" name='txtRoll' onChange={(data)=>{setInput({...input,roll:data.target.value})}}></input><br/>
City: <input type="text" name='txtCity' onChange={(data)=>{setInput({...input,city:data.target.value})}}></input><br/> */}
        <input type="submit" value="signup"></input>
        </form>
        
        </>
    )
}
[10-01-2025 10:25] +91 95855 24527: const { useState } = require("react")
export default function Form1()
{
    function formSubmit(formdata)
    {    
        formdata.preventDefault()
       
        console.log('success............,',input.name,input.roll,input.city)
    }
    function updateData(d)
    {
        var variable =d.target.name;
        var value = d.target.value;
        console.log("the vari: ",variable,"the val: ",value)
        setInput((data)=>{
                return {...data,[variable]:value}
        }
        )
    }
    const [input,setInput]=useState(
        {
            roll:'',
            name:'',
            city:''
        }
    )
    return(
        <>
        <form onSubmit={formSubmit}>
        Name: <input type="text" name='name' onChange={updateData}></input><br/>
Roll: <input type="text" name='roll'  onChange={updateData}></input><br/>
City: <input type="text" name='city'   onChange={updateData}></input><br/>
{/* Name: <input type="text" name='txtName' onChange={(data)=>{setInput({...input,name:data.target.value})}}></input><br/>
Roll: <input type="text" name='txtRoll' onChange={(data)=>{setInput({...input,roll:data.target.value})}}></input><br/>
City: <input type="text" name='txtCity' onChange={(data)=>{setInput({...input,city:data.target.value})}}></input><br/> */}
        <input type="submit" value="signup"></input>
        </form>
        
        </>
    )
}
[10-01-2025 12:11] +91 95855 24527: import logo from './logo.svg';
import './App.css';
import Home from './Home';
import Contact from './Contact';
import About from './About';
import { BrowserRouter, Link, Route, Routes } from 'react-router-dom';
import User from './User';

function App() {
  return (
    <>
    
    <h1>welcome to the cls</h1>
    <BrowserRouter>
    <ul>
     <li><Link to="/">HOME</Link> </li>
     <li><Link to="/aboutus">ABOUT</Link> </li>
     <li><Link to="/contact-us">CONTACT</Link> </li> 
     <li><Link to="/user/10">USER 10</Link> </li> 
     <li><Link to="/user/13">USER 13</Link> </li> 
     <li><Link to="/user/134">USER 134</Link> </li> 
    </ul>
        <Routes>
          <Route path='/' element={<Home/>}></Route>
          <Route path='/aboutus' element={<About/>}></Route> 
          <Route path='/contact-us' element={<Contact/>}></Route>
          <Route path='/user/:id' element={<User/>}></Route>
        </Routes>
    </BrowserRouter>

    </>
  )
   
}

export default App;
[10-01-2025 12:11] +91 95855 24527: import { useParams } from "react-router-dom"

export default function User()
{
    const{id}=useParams()
    return(
        <>
        <h1> im the USER {id}</h1>
        </>
    )
}
[10-01-2025 14:13] +91 95855 24527: import logo from './logo.svg';
import './App.css';
import Home from './Home';
import Contact from './Contact';
import About from './About';
import { BrowserRouter, Link, Route, Routes } from 'react-router-dom';
import User from './User';
import Newbook from './Newbook';
import Oldbook from './Oldbook';
function App() {
  return (
    <>
    
    <h1>welcome to the cls</h1>
    <BrowserRouter>
    <ul>
     <li><Link to="/">HOME</Link> </li>
     <li><Link to="/aboutus">ABOUT</Link> </li>
     <li><Link to="/contact-us">CONTACT</Link> </li> 
     <li><Link to="/user/10">USER 10</Link> </li> 
     <li><Link to="/user/13">USER 13</Link> </li> 
     <li><Link to="/user/134">USER 134</Link> </li> 
     <li><Link to="/book/new-book">NEW-BOOK</Link> </li>
     <li><Link to="/book/old-book">OLD-BOOK</Link> </li>
      
    </ul>
        <Routes>
          <Route path='/' element={<Home/>}></Route>
          <Route path='/aboutus' element={<About/>}></Route> 
          <Route path='/contact-us' element={<Contact/>}></Route>
          <Route path='/user/:id' element={<User/>}></Route>
          <Route path='/book/new-book' element={<Newbook/>}></Route>
          <Route path='/book/old-book' element={<Oldbook/>}></Route>
          

        </Routes>
    </BrowserRouter>

    </>
  )
   
}

export default App;
[10-01-2025 14:16] +91 95855 24527: import logo from './logo.svg';
import './App.css';
import Home from './Home';
import Contact from './Contact';
import About from './About';
import { BrowserRouter, Link, Route, Routes } from 'react-router-dom';
import User from './User';
import Newbook from './Newbook';
import Oldbook from './Oldbook';
function App() {
  return (
    <>
    
    <h1>welcome to the cls</h1>
    <BrowserRouter>
    <ul>
     <li><Link to="/">HOME</Link> </li>
     <li><Link to="/aboutus">ABOUT</Link> </li>
     <li><Link to="/contact-us">CONTACT</Link> </li> 
     <li><Link to="/user/10">USER 10</Link> </li> 
     <li><Link to="/user/13">USER 13</Link> </li> 
     <li><Link to="/user/134">USER 134</Link> </li> 
     <li><Link to="/books/new-book">NEW-BOOK</Link> </li>
     <li><Link to="/books/old-book">OLD-BOOK</Link> </li>
      
    </ul>
        <Routes>
          <Route path='/' element={<Home/>}></Route>
          <Route path='/aboutus' element={<About/>}></Route> 
          <Route path='/contact-us' element={<Contact/>}></Route>
          <Route path='/user/:id' element={<User/>}></Route>
          <Route path='/books'>
          <Route path='new-book' element={<Newbook/>}></Route>
          <Route path='old-book' element={<Oldbook/>}></Route>
          </Route>
          

        </Routes>
    </BrowserRouter>

    </>
  )
   
}

export default App;
[10-01-2025 14:46] +91 95855 24527: import { useNavigate } from "react-router-dom"

export default function Login()
{
  const navigate=useNavigate()

  function gotoDashboard()
  {
    navigate('/dashboard')
  }
    return(
        <>
        <h1>LOGIN PAGE</h1>
        <button onClick={()=>navigate('/dashboard')}>go to dashboard</button>
        </>
    )
}
import {createSlice} from '@reduxjs/toolkit'
const initialState={
    eusers:[],
     persons: []


}
export const userSlice= createSlice({   
    name:'mySlice', // unique name
    initialState,
    reducers:{
        setUsers:(state,action)=>{ // it contains 2 argu , first one action 2nd payload
            state.eusers=[...state.eusers,action.payload]
        },
        deleteUser:(state,action)=>{
            state.eusers=state.eusers.filter((user,index)=>index!==action.payload)
        }
    }
})
export const {setUsers,deleteUser}=userSlice.actions
export default userSlice.reducer



[21-01-2025 11:08] +91 95855 24527: import { configureStore } from "@reduxjs/toolkit";
 
import myReducer from '../slices/userSlice';  
import myFruitReducer from '../slices/fruitSlice';  
  
 const store =configureStore({
    reducer:{
        userInfo:myReducer,
        fruitsInfo:myFruitReducer
    }
 })
 export default store
[21-01-2025 11:09] +91 95855 24527: import React from 'react';
  import ReactDOM from 'react-dom/client';
  import './index.css';
  import App from './App';
  import reportWebVitals from './reportWebVitals';
  import Display from './Display'
  import Datas from './Datas'
  import MyClass from './MyClass';
  import Test from './Test';
  import States from './States';
  import Ren from './Ren';
  import Parent1 from './Parent1';
  import Parent2 from './Parent2';
  import Demo from './Demo';
  import C1 from './C1';
  import C3 from './C3';
  import Form1 from './Form1';
  import { Provider } from 'react-redux';
  import Sty1 from './Sty1';
  import Sty3 from './Sty3';
  import store from './apps/store';
  
  const root = ReactDOM.createRoot(document.getElementById('root'));
  root.render(
  
  
    // <React.StrictMode>
      <Provider store={store}>
  <App/>
  </Provider>
    // </React.StrictMode>
  );

  // If you want to start measuring performance in your app, pass a function
  // to log results (for example: reportWebVitals(console.log))
  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
  reportWebVitals();
[21-01-2025 11:09] +91 95855 24527: import React, { useState } from "react";
import { useDispatch } from "react-redux";
import { setUsers } from "./slices/userSlice"; // Assuming you have this action defined

export default function Form1() {
  const dispatch = useDispatch();
  const [input, setInput] = useState({
    roll: '',
    name: '',
    city: '',
  });

  // Handle form submission
  const addUser = (e) => {
    e.preventDefault(); // Prevent default form submission
    dispatch(setUsers(input)); // Dispatch the action with input data
  };

  // Update the input fields
  const updateData = (e) => {
    const { name, value } = e.target;
    setInput((prevData) => ({
      ...prevData,
      [name]: value, // Update the corresponding field
    }));
  };

  return (
    <div className="container">
      <form onSubmit={addUser}>

        {/* Name Field */}
        <div className="form-group">
          <label htmlFor="name">Name</label>
          <input
            type="text"
            className="form-control"
            id="name"
            name="name"
            value={input.name}
            onChange={updateData}
            placeholder="Enter name"
          />
        </div>

        {/* Roll Field */}
        <div className="form-group">
          <label htmlFor="roll">Roll</label>
          <input
            type="text"
            className="form-control"
            id="roll"
            name="roll"
            value={input.roll}
            onChange={updateData}
            placeholder="Enter roll number"
          />
        </div>

        {/* City Field */}
        <div className="form-group">
          <label htmlFor="city">City</label>
          <input
            type="text"
            className="form-control"
            id="city"
            name="city"
            value={input.city}
            onChange={updateData}
            placeholder="Enter city"
          />
        </div>

        {/* Submit Button */}
        <button type="submit" className="btn btn-primary">Submit</button>

      </form>
    </div>
  );
}
[21-01-2025 11:09] +91 95855 24527: import { useDispatch, useSelector } from "react-redux"
import { useParams } from "react-router-dom"
import { deleteUser } from "./slices/userSlice"

export default function User()
{ 
    // const{id}=useParams()
    const users=useSelector((state)=> state.userInfo.eusers )
const dispatch= useDispatch()
const deleteUserInfo=(index)=>{
dispatch(deleteUser(index))
}
    console.log('the users: ',users)
    return(
        <>
          <h1> im the USER</h1>
          {
            users.map( (user,index)=>{
                return (
                    <div key={index}>
                        <h1>{user.roll}</h1>
                        <h1>{user.name}</h1>
                        <h1>{user.city}</h1>
                        <button onClick={() => deleteUserInfo(index)}>delete</button>
                        
                     </div>
                )
            })
          }
        {/* <h1> im the USER {id}</h1> */}
        </>
    )
}
[21-01-2025 11:09] +91 95855 24527: import {createSlice} from '@reduxjs/toolkit'
const initialState={
    eusers:[],
     fruits: []


}
export const fruitSlice= createSlice({   
    name:'mySlice1', // unique name
    initialState,
    reducers:{
        setFruitInfo:(state,action)=>{ // it contains 2 argu , first one action 2nd payload
            state.fruits=[...state.fruits,action.payload]
        },
        deleteFruit:(state,action)=>{
            state.fruits=state.fruits.filter((fruit,index)=>index!==action.payload)
        }
    }
})
export const {setFruitInfo,deleteFruit}=fruitSlice.actions
export default fruitSlice.reducer
[21-01-2025 11:09] +91 95855 24527: import { useState } from "react"
import  {useDispatch}  from  "react-redux";
 
import {setFruitInfo }from './slices/fruitSlice';
export default function About()
{
    const fruitDispatch= useDispatch()  

const [fruitName,setFruit]=useState("");
console.log('the fruit name b4 is',fruitName)
    function updateFruit(e)
    {
         
        var val=e.target.value
        setFruit( val)
      
        console.log('the fruit name is',fruitName)
    }

    function addFruit(a)
    {
        a.preventDefault()
        fruitDispatch(setFruitInfo(fruitName))
    }
    return(
        <>
        <h1>About PAGE</h1>
        <input type="text" onChange={updateFruit}></input>
        <button onClick={addFruit}>add fruit</button>
        </>
    )
}
[21-01-2025 11:09] +91 95855 24527: import { useSelector } from "react-redux"

export default function Contact()
{
const allFruits= useSelector((state)=> state.fruitsInfo.fruits)

 console.log("the fruits",allFruits)


    return(
        <>
        <h1>Contact Fruit PAGE</h1>
        </>
    )
}

[24-01-2025 14:26] +91 95855 24527: db.products.insertMany([
...   {  "name": "Item A", "price": 50 },
...   {  "name": "Item B", "price": 75 },
...   {  "name": "Item C", "price": 100 },
...   {  "name": "Item D", "price": 150 },
...   {   "name": "Item E", "price": 200 }
... ])
[24-01-2025 14:30] +91 95855 24527: $lt: Less than
db.products.find({ price: { $lt: 100 } })
-----------------------------------------------

$lte: Less than or equal to

db.products.find({ price: { $lte: 100 } })

--------------------------------------------------

$gt: Greater than
db.products.find({ price: { $gt: 100 } })
---------------------------------------------------

$gte: Greater than or equal to

db.products.find({ price: { $gte: 100 } })
-------------------------------------------------------

$eq: Equal to
db.products.find({ price: { $eq: 100 } })
-------------------------------------------------------

$ne: Not equal to
db.products.find({ price: { $ne: 100 } })
[24-01-2025 14:45] +91 95855 24527: db.products.find({ price: { $gte: 50, $lte: 150 } })
[24-01-2025 15:11] +91 95855 24527: db.products.find({
  $and: [{ price: { $gte: 50 } }, { category: "Electronics" }]
});



===========================================================

$or: Match at least one condition

Find products with a price less than 75 or greater than 150.

db.products.find({
  $or: [{ price: { $lt: 75 } }, { price: { $gt: 150 } }]
});


=====================================================


$nor: Match none of the conditions

Find products with a price neither less than 75 nor greater than 150.

db.products.find({
  $nor: [{ price: { $lt: 75 } }, { price: { $gt: 150 } }]
});
=====================================================
$not: Negates the filter condition
Find products with a price not greater than or equal to 100

db.products.find({
  price: { $not: { $gte: 100 } }
});
=====================================================================================================================================================================

day-5

import React from 'react';
import { Github, ExternalLink, Code2, Briefcase, FileText } from 'lucide-react';

function App() {
  const skills = [
    { category: "Frontend", items: ["React", "Tailwind CSS,HTML"] },
    { category: "Backend", items: ["Node.js,Javascript"] },
    { category: "Tools", items: ["Git", "VS Code"] },
  ];

  const projects = [
    {
      title: "E-Learning Platform",
      description: "Built an e-learning platform with video courses, quizzes, and progress tracking. Integrated Stripe for payments and created a responsive dashboard.",
      tech: ["React", "Node.js"],
      role: "Full Stack Developer",
      link: "https://github.com/yourusername/e-learning-platform"
    },
    {
      title: "Healthcare Management System",
      description: "Developed a healthcare system for managing patient records, appointments, and secure messaging. Ensured HIPAA compliance and security.",
      tech: ["React", "MongoDB"],
      role: "Frontend Lead",
      link: "https://github.com/yourusername/healthcare-system"
    },
    {
      title: "Real-time Analytics Dashboard",
      description: "Created a dashboard for real-time analytics with data visualization and customizable widgets. Integrated multiple data sources.",
      tech: ["React", "TypeScript"],
      role: "Developer",
      link: "https://github.com/yourusername/analytics-dashboard"
    }
  ];

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Navigation */}
      <nav className="bg-white shadow-md fixed w-full z-10">
        <div className="container mx-auto px-4">
          <div className="flex justify-between items-center h-16">
            <div className="text-xl font-bold text-blue-600">PORTFOLIO</div>
            <div className="hidden md:flex space-x-8">
              <a href="#about" className="text-gray-600 hover:text-blue-600">About</a>
              <a href="#skills" className="text-gray-600 hover:text-blue-600">Skills</a>
              <a href="#projects" className="text-gray-600 hover:text-blue-600">Projects</a>
            </div>
            <a 
              href="https://github.com" 
              target="_blank" 
              rel="noreferrer" 
              className="flex items-center text-gray-600 hover:text-blue-600"
            >
              <Github className="mr-2" size={20} />
              <span>Github Profile</span>
            </a>
          </div>
        </div>
      </nav>

      {/* Hero Section */}
      <section id="about" className="pt-24 bg-gradient-to-r from-blue-600 to-indigo-700 text-white">
        <div className="container mx-auto px-4 py-20">
          <div className="flex flex-col md:flex-row items-center justify-between">
            <div className="md:w-1/2 mb-8 md:mb-0">
              <h1 className="text-4xl md:text-5xl font-bold mb-4">Hi, I am <span className="text-blue-200">ABISHA</span></h1>
              <h2 className="text-xl md:text-2xl mb-6">Full Stack Developer</h2>
              <p className="text-lg mb-8 leading-relaxed">
                I am a motivated and versatile individual, deeply passionate about continuous learning and embracing new challenges. 
                With a strong commitment to delivering high-quality results, I thrive in dynamic environments where I can apply my 
                skills to solve complex problems.
              </p>
              <a 
                href="src/public/ABISHA-RESUME.pdf" 
                target="_blank" 
                rel="noreferrer" 
                className="flex items-center bg-white text-blue-600 px-6 py-3 rounded-lg shadow-md hover:bg-blue-50 transition-colors"
              >
                <FileText className="mr-2" size={20} />
                Check Resume
              </a>
            </div>
            <div className="md:w-1/3">
              <img 
                src="profile.jpg"
                alt="Profile"
                className="rounded-full w-64 h-64 object-cover border-4 border-white shadow-lg"
              />
            </div>
          </div>
        </div>
      </section>

      {/* Skills Section */}
      <section id="skills" className="py-20 bg-white">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-12">Skills & Expertise</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {skills.map((skillGroup, index) => (
              <div key={index} className="bg-gray-50 rounded-lg p-6 shadow-md">
                <h3 className="text-xl font-semibold mb-4">{skillGroup.category}</h3>
                <ul className="space-y-2">
                  {skillGroup.items.map((skill, skillIndex) => (
                    <li key={skillIndex} className="flex items-center">
                      <Code2 size={16} className="mr-2 text-blue-600" />
                      {skill}
                    </li>
                  ))}
                </ul>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Projects Section */}
      <section id="projects" className="py-20 bg-gray-50">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-12">Featured Projects</h2>
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {projects.map((project, index) => (
              <div key={index} className="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
                <div className="p-6">
                  <div className="flex items-center justify-between mb-4">
                    <h3 className="text-2xl font-semibold text-blue-600">{project.title}</h3>
                    <a 
                      href={project.link}
                      target="_blank"
                      rel="noreferrer"
                      className="text-gray-600 hover:text-blue-600 transition-colors"
                    >
                      <ExternalLink size={24} />
                    </a>
                  </div>
                  <div className="mb-4">
                    <div className="flex items-center mb-3">
                      <Briefcase size={18} className="mr-2 text-blue-600" />
                      <span className="text-gray-600 font-medium">{project.role}</span>
                    </div>
                    <p className="text-gray-700 leading-relaxed mb-4">
                      {project.description}
                    </p>
                  </div>
                  <div className="flex flex-wrap gap-2">
                    {project.tech.map((tech, techIndex) => (
                      <span 
                        key={techIndex}
                        className="px-3 py-1 bg-blue-100 text-blue-600 rounded-full text-sm font-medium"
                      >
                        {tech}
                      </span>
                    ))}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-800 text-white py-8">
        <div className="container mx-auto px-4 text-center">
          <p>© 2025 ABISHA. All rights reserved.</p>
        </div>
      </footer>
    </div>
  );
}

export default App;
const express = require('express');
const exhbs = require('express-handlebars');
const bodyParser=require('body-parser');
const app = express();
const dbo=require('./db');
const empmodel=require('./models/empModel')
const objid=dbo.objectId

dbo.getDatabase();
app.engine('hbs', exhbs.engine({layoutsDir:'viewsfold/',defaultLayout:'maincopy',extname:'hbs',}));
app.set ('view engine', 'hbs');
app.set('views','viewsfold');
app.use(bodyParser.urlencoded({ extended:true}));

app.get('/',async(req, res)=> {
    let datas;
    let edit_id,edit_emp;
    // let database=await dbo.getDatabase();
    // const collection=database.collection('emp')
    // const cursur=collection.find({})
    // let datas=await cursur.toArray()
    const msg='';
    //console.log('the data',datas)
    if(req.query.edit_idd){
        edit_id=req.query.edit_idd
        edit_emp=await collection.findOne({_id:new objid(edit_id)})
    }
    if(req.query.delete_idd){
        delete_id=req.query.delete_idd
        console.log('Delete request for _id:',delete_id);
        await collection.deleteOne({_id: new objid(delete_id)})
        res.redirect('/?status=3');
    }
    if(req.query.status===1){
        msg='Inserted successfully'
    }
    res.render ('maincopy',{msg,datas,edit_id,edit_emp});

});

app.post('/empinfo', async(req , res) =>{
    //const database = await dbo.getDatabase();
    //const collection = database.collection('emp');
    const employee = {empid: req.body.eid, empname: req.body.ename};
    //await collection.insertOne(employee);
    const newempDoc=new empmodel(employee)
    newempDoc.save()
    res.redirect('/?status=1');
});
    app.post('/updateinfo/:e_id', async(req , res) =>{
        const database = await dbo.getDatabase();
        const collection = database.collection('emp');
        const employee = {empid: req.body.eid, empname: req.body.ename};
        let ed_idd=req.params.e_id
        await collection.updateOne({_id:new objid(ed_idd)},{$set:employee});
    
        res.redirect('/?status=2');
});

app.listen(8000,()=>{
    console.log('Listening on port 8000...');
});
========================================================================================================================================================================
day-7

const mongose=require('mongoose')
const empSchema=new mongose.Schema({
    empid: Number,
    empname: String
})

const empmdl=mongose.model('empmdle',empSchema)
module.exports=empmdl
const express = require('express');
const exhbs = require('express-handlebars');
const bodyParser=require('body-parser');
const app = express();
const dbo=require('./db');
const empmodel=require('./models/empModel')
const objid=dbo.objectId

dbo.getDatabase();
app.engine('hbs', exhbs.engine({layoutsDir:'viewsfold/',defaultLayout:'maincopy',extname:'hbs',}));
app.set ('view engine', 'hbs');
app.set('views','viewsfold');
app.use(bodyParser.urlencoded({ extended:true}));

app.get('/',async(req, res)=> {
    let datas;
    let edit_id,edit_emp;
    // let database=await dbo.getDatabase();
    // const collection=database.collection('emp')
    // const cursur=collection.find({})
    // let datas=await cursur.toArray()
    const msg='';
    //console.log('the data',datas)
    if(req.query.edit_idd){
        edit_id=req.query.edit_idd
        edit_emp=await collection.findOne({_id:new objid(edit_id)})
    }
    if(req.query.delete_idd){
        delete_id=req.query.delete_idd
        console.log('Delete request for _id:',delete_id);
        await collection.deleteOne({_id: new objid(delete_id)})
        res.redirect('/?status=3');
    }
    if(req.query.status===1){
        msg='Inserted successfully'
    }
    res.render ('maincopy',{msg,datas,edit_id,edit_emp});

});

app.post('/empinfo', async(req , res) =>{
    //const database = await dbo.getDatabase();
    //const collection = database.collection('emp');
    const employee = {empid: req.body.eid, empname: req.body.ename};
    //await collection.insertOne(employee);
    const newempDoc=new empmodel(employee)
    newempDoc.save()
    res.redirect('/?status=1');
});
    app.post('/updateinfo/:e_id', async(req , res) =>{
        const database = await dbo.getDatabase();
        const collection = database.collection('emp');
        const employee = {empid: req.body.eid, empname: req.body.ename};
        let ed_idd=req.params.e_id
        await collection.updateOne({_id:new objid(ed_idd)},{$set:employee});
    
        res.redirect('/?status=2');
});

app.listen(8000,()=>{
    console.log('Listening on port 8000...');
});


//const mongodb = require('mongodb');
//const mongoClient = mongodb.MongoClient;
const mongse = require('mongoose')

let database;
//let objectId = mongodb.ObjectId;
async function getDatabase()
{
         mongse.connect('mongodb://127.0.0.1:27017/emp')
         .then(() => 
         {
            console.log("DB connected..")
         })
         .catch(() => 
         {
            console.log("DB error...")
         })
         // const client =await mongoClient.connect('mongodb://127.0.0.1:27017');
         // database = client.db('t1');
         // if(!database)
         // {
         //    console.log('Database connected successfully');
         // }
         // else
         // {
         //    console.log('Database not connected');
         // }
         // return database;
}
module.exports = {getDatabase}
//module.exports = {getDatabase,objectId};

{
  "name": "mongocrud",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "dependencies": {
        "body-parser": "^1.20.3",
        "express": "^4.21.2",
        "express-handlebars": "^8.0.1",
        "mongodb": "^6.12.0",
        "mongoose": "^8.9.5"
      }
    },
    "node_modules/@isaacs/cliui": {
      "version": "8.0.2",
      "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
      "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^5.1.2",
        "string-width-cjs": "npm:string-width@^4.2.0",
        "strip-ansi": "^7.0.1",
        "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
        "wrap-ansi": "^8.1.0",
        "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@mongodb-js/saslprep": {
      "version": "1.1.9",
      "resolved": "https://registry.npmjs.org/@mongodb-js/saslprep/-/saslprep-1.1.9.tgz",
      "integrity": "sha512-tVkljjeEaAhCqTzajSdgbQ6gE6f3oneVwa3iXR6csiEwXXOFsiC6Uh9iAjAhXPtqa/XMDHWjjeNH/77m/Yq2dw==",
      "license": "MIT",
      "dependencies": {
        "sparse-bitfield": "^3.0.3"
      }
    },
    "node_modules/@types/webidl-conversions": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/@types/webidl-conversions/-/webidl-conversions-7.0.3.tgz",
      "integrity": "sha512-CiJJvcRtIgzadHCYXw7dqEnMNRjhGZlYK05Mj9OyktqV8uVT8fD2BFOB7S1uwBE3Kj2Z+4UyPmFw/Ixgw/LAlA==",
      "license": "MIT"
    },
    "node_modules/@types/whatwg-url": {
      "version": "11.0.5",
      "resolved": "https://registry.npmjs.org/@types/whatwg-url/-/whatwg-url-11.0.5.tgz",
      "integrity": "sha512-coYR071JRaHa+xoEvvYqvnIHaVqaYrLPbsufM9BF63HkwI5Lgmy2QR8Q5K/lYDYo5AK82wOvSOS0UsLTpTG7uQ==",
      "license": "MIT",
      "dependencies": {
        "@types/webidl-conversions": "*"
      }
    },
    "node_modules/accepts": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
      "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
      "license": "MIT",
      "dependencies": {
        "mime-types": "~2.1.34",
        "negotiator": "0.6.3"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/ansi-regex": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
      "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
      }
    },
    "node_modules/ansi-styles": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
      "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/array-flatten": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==",
      "license": "MIT"
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "license": "MIT"
    },
    "node_modules/body-parser": {
      "version": "1.20.3",
      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz",
      "integrity": "sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==",
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "content-type": "~1.0.5",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "on-finished": "2.4.1",
        "qs": "6.13.0",
        "raw-body": "2.5.2",
        "type-is": "~1.6.18",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/brace-expansion": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz",
      "integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/bson": {
      "version": "6.10.1",
      "resolved": "https://registry.npmjs.org/bson/-/bson-6.10.1.tgz",
      "integrity": "sha512-P92xmHDQjSKPLHqFxefqMxASNq/aWJMEZugpCjf+AF/pgcUpMMQCg7t7+ewko0/u8AapvF3luf/FoehddEK+sA==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=16.20.1"
      }
    },
    "node_modules/bytes": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
      "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/call-bind-apply-helpers": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.1.tgz",
      "integrity": "sha512-BhYE+WDaywFg2TBWYNXAE+8B1ATnThNBqXHP5nQu0jWJdVvY2hvkpyB3qOmtmDePiS5/BDQ8wASEWGMWRG148g==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/call-bound": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.3.tgz",
      "integrity": "sha512-YTd+6wGlNlPxSuri7Y6X8tY2dmm12UMH66RpKMhiX6rsk5wXXnYgbUcOt8kiS31/AjfoTOvCsE+w8nZQLQnzHA==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "license": "MIT",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "license": "MIT"
    },
    "node_modules/content-disposition": {
      "version": "0.5.4",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
      "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "5.2.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/content-type": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
      "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz",
      "integrity": "sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie-signature": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==",
      "license": "MIT"
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/destroy": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
      "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/dunder-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-errors": "^1.3.0",
        "gopd": "^1.2.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
      "license": "MIT"
    },
    "node_modules/ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==",
      "license": "MIT"
    },
    "node_modules/emoji-regex": {
      "version": "9.2.2",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
      "license": "MIT"
    },
    "node_modules/encodeurl": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
      "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-object-atoms": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==",
      "license": "MIT"
    },
    "node_modules/etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/express": {
      "version": "4.21.2",
      "resolved": "https://registry.npmjs.org/express/-/express-4.21.2.tgz",
      "integrity": "sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==",
      "license": "MIT",
      "dependencies": {
        "accepts": "~1.3.8",
        "array-flatten": "1.1.1",
        "body-parser": "1.20.3",
        "content-disposition": "0.5.4",
        "content-type": "~1.0.4",
        "cookie": "0.7.1",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "finalhandler": "1.3.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "merge-descriptors": "1.0.3",
        "methods": "~1.1.2",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "path-to-regexp": "0.1.12",
        "proxy-addr": "~2.0.7",
        "qs": "6.13.0",
        "range-parser": "~1.2.1",
        "safe-buffer": "5.2.1",
        "send": "0.19.0",
        "serve-static": "1.16.2",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "type-is": "~1.6.18",
        "utils-merge": "1.0.1",
        "vary": "~1.1.2"
      },
      "engines": {
        "node": ">= 0.10.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/express"
      }
    },
    "node_modules/express-handlebars": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/express-handlebars/-/express-handlebars-8.0.1.tgz",
      "integrity": "sha512-mdas0PTbgQnwSyAjcYM7OMaftM8nJ3Kqz6yAyK4iCFvMOGGvh6pv42IHwcE5PBpS6ffYeZRSsgAdYUMG4CSjhQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "glob": "^11.0.0",
        "graceful-fs": "^4.2.11",
        "handlebars": "^4.7.8"
      },
      "engines": {
        "node": ">=20"
      }
    },
    "node_modules/finalhandler": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz",
      "integrity": "sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "statuses": "2.0.1",
        "unpipe": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/foreground-child": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.0.tgz",
      "integrity": "sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==",
      "license": "ISC",
      "dependencies": {
        "cross-spawn": "^7.0.0",
        "signal-exit": "^4.0.1"
      },
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/forwarded": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.7.tgz",
      "integrity": "sha512-VW6Pxhsrk0KAOqs3WEd0klDiF/+V7gQOpAvY1jVU/LHmaD/kQO4523aiJuikX/QAKYiW6x8Jh+RJej1almdtCA==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "function-bind": "^1.1.2",
        "get-proto": "^1.0.0",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/glob": {
      "version": "11.0.1",
      "resolved": "https://registry.npmjs.org/glob/-/glob-11.0.1.tgz",
      "integrity": "sha512-zrQDm8XPnYEKawJScsnM0QzobJxlT/kHOOlRTio8IH/GrmxRE5fjllkzdaHclIuNjUQTJYH2xHNIGfdpJkDJUw==",
      "license": "ISC",
      "dependencies": {
        "foreground-child": "^3.1.0",
        "jackspeak": "^4.0.1",
        "minimatch": "^10.0.0",
        "minipass": "^7.1.2",
        "package-json-from-dist": "^1.0.0",
        "path-scurry": "^2.0.0"
      },
      "bin": {
        "glob": "dist/esm/bin.mjs"
      },
      "engines": {
        "node": "20 || >=22"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/gopd": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.11",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
      "license": "ISC"
    },
    "node_modules/handlebars": {
      "version": "4.7.8",
      "resolved": "https://registry.npmjs.org/handlebars/-/handlebars-4.7.8.tgz",
      "integrity": "sha512-vafaFqs8MZkRrSX7sFVUdo3ap/eNiLnb4IakshzvP56X5Nr1iGKAIqdX6tMlm6HcNRIkr6AxO5jFEoJzzpT8aQ==",
      "license": "MIT",
      "dependencies": {
        "minimist": "^1.2.5",
        "neo-async": "^2.6.2",
        "source-map": "^0.6.1",
        "wordwrap": "^1.0.0"
      },
      "bin": {
        "handlebars": "bin/handlebars"
      },
      "engines": {
        "node": ">=0.4.7"
      },
      "optionalDependencies": {
        "uglify-js": "^3.1.4"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "license": "MIT",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/http-errors": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
      "license": "MIT",
      "dependencies": {
        "depd": "2.0.0",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "license": "ISC"
    },
    "node_modules/ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "license": "ISC"
    },
    "node_modules/jackspeak": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-4.0.2.tgz",
      "integrity": "sha512-bZsjR/iRjl1Nk1UkjGpAzLNfQtzuijhn2g+pbZb98HQ1Gk8vM9hfbxeMBP+M2/UUdwj0RqGG3mlvk2MsAqwvEw==",
      "license": "BlueOak-1.0.0",
      "dependencies": {
        "@isaacs/cliui": "^8.0.2"
      },
      "engines": {
        "node": "20 || >=22"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/kareem": {
      "version": "2.6.3",
      "resolved": "https://registry.npmjs.org/kareem/-/kareem-2.6.3.tgz",
      "integrity": "sha512-C3iHfuGUXK2u8/ipq9LfjFfXFxAZMQJJq7vLS45r3D9Y2xQ/m4S8zaR4zMLFWh9AsNPXmcFfUDhTEO8UIC/V6Q==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/lru-cache": {
      "version": "11.0.2",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-11.0.2.tgz",
      "integrity": "sha512-123qHRfJBmo2jXDbo/a5YOQrJoHF/GNQTLzQ5+IdK5pWpceK17yRc6ozlWd25FxvGKQbIUs91fDFkXmDHTKcyA==",
      "license": "ISC",
      "engines": {
        "node": "20 || >=22"
      }
    },
    "node_modules/math-intrinsics": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/memory-pager": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/memory-pager/-/memory-pager-1.5.0.tgz",
      "integrity": "sha512-ZS4Bp4r/Zoeq6+NLJpP+0Zzm0pR8whtGPf1XExKLJBAczGMnSi3It14OiNCStjQjM6NU1okjQGSxgEZN8eBYKg==",
      "license": "MIT"
    },
    "node_modules/merge-descriptors": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz",
      "integrity": "sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/methods": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
      "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
      "license": "MIT",
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "license": "MIT",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/minimatch": {
      "version": "10.0.1",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-10.0.1.tgz",
      "integrity": "sha512-ethXTt3SGGR+95gudmqJ1eNhRO7eGEGIgYA9vnPatK4/etz2MEVDno5GMCibdMTuBMyElzIlgxMna3K94XDIDQ==",
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": "20 || >=22"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/minimist": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/minipass": {
      "version": "7.1.2",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
      "license": "ISC",
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/mongodb": {
      "version": "6.12.0",
      "resolved": "https://registry.npmjs.org/mongodb/-/mongodb-6.12.0.tgz",
      "integrity": "sha512-RM7AHlvYfS7jv7+BXund/kR64DryVI+cHbVAy9P61fnb1RcWZqOW1/Wj2YhqMCx+MuYhqTRGv7AwHBzmsCKBfA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@mongodb-js/saslprep": "^1.1.9",
        "bson": "^6.10.1",
        "mongodb-connection-string-url": "^3.0.0"
      },
      "engines": {
        "node": ">=16.20.1"
      },
      "peerDependencies": {
        "@aws-sdk/credential-providers": "^3.188.0",
        "@mongodb-js/zstd": "^1.1.0 || ^2.0.0",
        "gcp-metadata": "^5.2.0",
        "kerberos": "^2.0.1",
        "mongodb-client-encryption": ">=6.0.0 <7",
        "snappy": "^7.2.2",
        "socks": "^2.7.1"
      },
      "peerDependenciesMeta": {
        "@aws-sdk/credential-providers": {
          "optional": true
        },
        "@mongodb-js/zstd": {
          "optional": true
        },
        "gcp-metadata": {
          "optional": true
        },
        "kerberos": {
          "optional": true
        },
        "mongodb-client-encryption": {
          "optional": true
        },
        "snappy": {
          "optional": true
        },
        "socks": {
          "optional": true
        }
      }
    },
    "node_modules/mongodb-connection-string-url": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/mongodb-connection-string-url/-/mongodb-connection-string-url-3.0.2.tgz",
      "integrity": "sha512-rMO7CGo/9BFwyZABcKAWL8UJwH/Kc2x0g72uhDWzG48URRax5TCIcJ7Rc3RZqffZzO/Gwff/jyKwCU9TN8gehA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@types/whatwg-url": "^11.0.2",
        "whatwg-url": "^14.1.0 || ^13.0.0"
      }
    },
    "node_modules/mongoose": {
      "version": "8.9.5",
      "resolved": "https://registry.npmjs.org/mongoose/-/mongoose-8.9.5.tgz",
      "integrity": "sha512-SPhOrgBm0nKV3b+IIHGqpUTOmgVL5Z3OO9AwkFEmvOZznXTvplbomstCnPOGAyungtRXE5pJTgKpKcZTdjeESg==",
      "license": "MIT",
      "dependencies": {
        "bson": "^6.10.1",
        "kareem": "2.6.3",
        "mongodb": "~6.12.0",
        "mpath": "0.9.0",
        "mquery": "5.0.0",
        "ms": "2.1.3",
        "sift": "17.1.3"
      },
      "engines": {
        "node": ">=16.20.1"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/mongoose"
      }
    },
    "node_modules/mongoose/node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/mpath": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/mpath/-/mpath-0.9.0.tgz",
      "integrity": "sha512-ikJRQTk8hw5DEoFVxHG1Gn9T/xcjtdnOKIU1JTmGjZZlg9LST2mBLmcX3/ICIbgJydT2GOc15RnNy5mHmzfSew==",
      "license": "MIT",
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/mquery": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/mquery/-/mquery-5.0.0.tgz",
      "integrity": "sha512-iQMncpmEK8R8ncT8HJGsGc9Dsp8xcgYMVSbs5jgnm1lFHTZqMJTUWTDx1LBO8+mK3tPNZWFLBghQEIOULSTHZg==",
      "license": "MIT",
      "dependencies": {
        "debug": "4.x"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/mquery/node_modules/debug": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.0.tgz",
      "integrity": "sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/mquery/node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/negotiator": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
      "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/neo-async": {
      "version": "2.6.2",
      "resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.2.tgz",
      "integrity": "sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==",
      "license": "MIT"
    },
    "node_modules/object-inspect": {
      "version": "1.13.3",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.3.tgz",
      "integrity": "sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/on-finished": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
      "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
      "license": "MIT",
      "dependencies": {
        "ee-first": "1.1.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/package-json-from-dist": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
      "integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
      "license": "BlueOak-1.0.0"
    },
    "node_modules/parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-scurry": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-2.0.0.tgz",
      "integrity": "sha512-ypGJsmGtdXUOeM5u93TyeIEfEhM6s+ljAhrk5vAvSx8uyY/02OvrZnA0YNGUrPXfpJMgI1ODd3nwz8Npx4O4cg==",
      "license": "BlueOak-1.0.0",
      "dependencies": {
        "lru-cache": "^11.0.0",
        "minipass": "^7.1.2"
      },
      "engines": {
        "node": "20 || >=22"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/path-to-regexp": {
      "version": "0.1.12",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz",
      "integrity": "sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==",
      "license": "MIT"
    },
    "node_modules/proxy-addr": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
      "license": "MIT",
      "dependencies": {
        "forwarded": "0.2.0",
        "ipaddr.js": "1.9.1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/punycode": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/qs": {
      "version": "6.13.0",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.13.0.tgz",
      "integrity": "sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "side-channel": "^1.0.6"
      },
      "engines": {
        "node": ">=0.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/raw-body": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz",
      "integrity": "sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==",
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
      "license": "MIT"
    },
    "node_modules/send": {
      "version": "0.19.0",
      "resolved": "https://registry.npmjs.org/send/-/send-0.19.0.tgz",
      "integrity": "sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==",
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "mime": "1.6.0",
        "ms": "2.1.3",
        "on-finished": "2.4.1",
        "range-parser": "~1.2.1",
        "statuses": "2.0.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/send/node_modules/encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/send/node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/serve-static": {
      "version": "1.16.2",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz",
      "integrity": "sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==",
      "license": "MIT",
      "dependencies": {
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.3",
        "send": "0.19.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
      "license": "ISC"
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "license": "MIT",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/side-channel": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3",
        "side-channel-list": "^1.0.0",
        "side-channel-map": "^1.0.1",
        "side-channel-weakmap": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-list": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-map": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-weakmap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3",
        "side-channel-map": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/sift": {
      "version": "17.1.3",
      "resolved": "https://registry.npmjs.org/sift/-/sift-17.1.3.tgz",
      "integrity": "sha512-Rtlj66/b0ICeFzYTuNvX/EF1igRbbnGSvEyT79McoZa/DeGhMyC5pWKOEsZKnpkqtSeovd5FL/bjHWC3CIIvCQ==",
      "license": "MIT"
    },
    "node_modules/signal-exit": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
      "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
      "license": "ISC",
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/sparse-bitfield": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/sparse-bitfield/-/sparse-bitfield-3.0.3.tgz",
      "integrity": "sha512-kvzhi7vqKTfkh0PZU+2D2PIllw2ymqJKujUcyPMd9Y75Nv4nPbGJZXNhxsgdQab2BmlDct1YnfQCguEvHr7VsQ==",
      "license": "MIT",
      "dependencies": {
        "memory-pager": "^1.0.2"
      }
    },
    "node_modules/statuses": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/string-width": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
      "license": "MIT",
      "dependencies": {
        "eastasianwidth": "^0.2.0",
        "emoji-regex": "^9.2.2",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/string-width-cjs": {
      "name": "string-width",
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/string-width-cjs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
      "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^6.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
      }
    },
    "node_modules/strip-ansi-cjs": {
      "name": "strip-ansi",
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/tr46": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-5.0.0.tgz",
      "integrity": "sha512-tk2G5R2KRwBd+ZN0zaEXpmzdKyOYksXwywulIX95MBODjSzMIuQnQ3m8JxgbhnL1LeVo7lqQKsYa1O3Htl7K5g==",
      "license": "MIT",
      "dependencies": {
        "punycode": "^2.3.1"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "license": "MIT",
      "dependencies": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/uglify-js": {
      "version": "3.19.3",
      "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-3.19.3.tgz",
      "integrity": "sha512-v3Xu+yuwBXisp6QYTcH4UbH+xYJXqnq2m/LtQVWKWzYc1iehYnLixoQDN9FH6/j9/oybfd6W9Ghwkl8+UMKTKQ==",
      "license": "BSD-2-Clause",
      "optional": true,
      "bin": {
        "uglifyjs": "bin/uglifyjs"
      },
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/vary": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
      "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/webidl-conversions": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz",
      "integrity": "sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/whatwg-url": {
      "version": "14.1.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-14.1.0.tgz",
      "integrity": "sha512-jlf/foYIKywAt3x/XWKZ/3rz8OSJPiWktjmk891alJUEjiVxKX9LEO92qH3hv4aJ0mN3MWPvGMCy8jQi95xK4w==",
      "license": "MIT",
      "dependencies": {
        "tr46": "^5.0.0",
        "webidl-conversions": "^7.0.0"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/wordwrap": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz",
      "integrity": "sha512-gvVzJFlPycKc5dZN4yPkP8w7Dc37BtP1yczEneOb4uq34pXZcvrtRTmWV8W+Ume+XCxKgbjM+nevkyFPMybd4Q==",
      "license": "MIT"
    },
    "node_modules/wrap-ansi": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
      "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^6.1.0",
        "string-width": "^5.0.1",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs": {
      "name": "wrap-ansi",
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/wrap-ansi-cjs/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    }
  }
}











